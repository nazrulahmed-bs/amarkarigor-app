define(['dart_sdk', 'packages/amar_karigor/app/global/util/app_pref.dart', 'packages/amar_karigor/app/global/model/category.dart', 'packages/amar_karigor/app/global/model/service.dart', 'packages/get/get_rx/src/rx_types/rx_types.dart', 'packages/amar_karigor/app/global/widget/web_document.dart', 'packages/amar_karigor/app/modules/home/provider/home_provider.dart', 'packages/amar_karigor/app/global/util/localdata.dart', 'packages/get/get_instance/src/extension_instance.dart', 'packages/amar_karigor/app/modules/location/controllers/location_controller.dart', 'packages/get/get_core/src/get_main.dart', 'packages/amar_karigor/app/modules/location/model/city.dart', 'packages/amar_karigor/app/modules/location/model/country.dart', 'packages/amar_karigor/app/global/model/sub_category.dart', 'packages/get/get_navigation/src/routes/route_middleware.dart', 'packages/flutter/src/widgets/widget_span.dart'], (function load__packages__amar_karigor__app__modules__home__controllers__home_controller_dart(dart_sdk, packages__amar_karigor__app__global__util__app_pref$46dart, packages__amar_karigor__app__global__model__category$46dart, packages__amar_karigor__app__global__model__service$46dart, packages__get__get_rx__src__rx_types__rx_types$46dart, packages__amar_karigor__app__global__widget__web_document$46dart, packages__amar_karigor__app__modules__home__provider__home_provider$46dart, packages__amar_karigor__app__global__util__localdata$46dart, packages__get__get_instance__src__extension_instance$46dart, packages__amar_karigor__app__modules__location__controllers__location_controller$46dart, packages__get__get_core__src__get_main$46dart, packages__amar_karigor__app__modules__location__model__city$46dart, packages__amar_karigor__app__modules__location__model__country$46dart, packages__amar_karigor__app__global__model__sub_category$46dart, packages__get__get_navigation__src__routes__route_middleware$46dart, packages__flutter__src__widgets__widget_span$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const convert = dart_sdk.convert;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app_pref = packages__amar_karigor__app__global__util__app_pref$46dart.app__global__util__app_pref;
  const category$ = packages__amar_karigor__app__global__model__category$46dart.app__global__model__category;
  const service$ = packages__amar_karigor__app__global__model__service$46dart.app__global__model__service;
  const rx_types = packages__get__get_rx__src__rx_types__rx_types$46dart.get_rx__src__rx_types__rx_types;
  const web_document = packages__amar_karigor__app__global__widget__web_document$46dart.app__global__widget__web_document;
  const home_provider = packages__amar_karigor__app__modules__home__provider__home_provider$46dart.app__modules__home__provider__home_provider;
  const localdata = packages__amar_karigor__app__global__util__localdata$46dart.app__global__util__localdata;
  const extension_instance = packages__get__get_instance__src__extension_instance$46dart.get_instance__src__extension_instance;
  const location_controller = packages__amar_karigor__app__modules__location__controllers__location_controller$46dart.app__modules__location__controllers__location_controller;
  const get_main = packages__get__get_core__src__get_main$46dart.get_core__src__get_main;
  const city$ = packages__amar_karigor__app__modules__location__model__city$46dart.app__modules__location__model__city;
  const country$ = packages__amar_karigor__app__modules__location__model__country$46dart.app__modules__location__model__country;
  const sub_category = packages__amar_karigor__app__global__model__sub_category$46dart.app__global__model__sub_category;
  const get_controllers = packages__get__get_navigation__src__routes__route_middleware$46dart.get_state_manager__src__simple__get_controllers;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  var home_controller = Object.create(dart.library);
  var $getElementsByClassName = dartx.getElementsByClassName;
  var $isNotEmpty = dartx.isNotEmpty;
  var $first = dartx.first;
  var $remove = dartx.remove;
  var $add = dartx.add;
  var $addAll = dartx.addAll;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    JSArrayOfCategory: () => (T.JSArrayOfCategory = dart.constFn(_interceptors.JSArray$(category$.Category)))(),
    JSArrayOfService: () => (T.JSArrayOfService = dart.constFn(_interceptors.JSArray$(service$.Service)))(),
    JSArrayOfCity: () => (T.JSArrayOfCity = dart.constFn(_interceptors.JSArray$(city$.City)))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    JSArrayOfSubCategory: () => (T.JSArrayOfSubCategory = dart.constFn(_interceptors.JSArray$(sub_category.SubCategory)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  var I = ["package:amar_karigor/app/modules/home/controllers/home_controller.dart"];
  var myPref = dart.privateName(home_controller, "HomeController.myPref");
  var offers = dart.privateName(home_controller, "HomeController.offers");
  var categories = dart.privateName(home_controller, "HomeController.categories");
  var services = dart.privateName(home_controller, "HomeController.services");
  var mContext = dart.privateName(home_controller, "HomeController.mContext");
  var selectedCategoryId = dart.privateName(home_controller, "HomeController.selectedCategoryId");
  var currentIndex = dart.privateName(home_controller, "HomeController.currentIndex");
  const onReady = Symbol("onReady");
  home_controller.HomeController = class HomeController extends get_controllers.GetxController {
    get myPref() {
      return this[myPref];
    }
    set myPref(value) {
      this[myPref] = value;
    }
    get offers() {
      return this[offers];
    }
    set offers(value) {
      this[offers] = value;
    }
    get categories() {
      return this[categories];
    }
    set categories(value) {
      this[categories] = value;
    }
    get services() {
      return this[services];
    }
    set services(value) {
      this[services] = value;
    }
    get mContext() {
      return this[mContext];
    }
    set mContext(value) {
      this[mContext] = value;
    }
    get selectedCategoryId() {
      return this[selectedCategoryId];
    }
    set selectedCategoryId(value) {
      this[selectedCategoryId] = value;
    }
    get currentIndex() {
      return this[currentIndex];
    }
    set currentIndex(value) {
      this[currentIndex] = value;
    }
    changePage(index) {
      this.currentIndex.value = index;
    }
    onInit() {
      super.onInit();
      if (true) {
        let loader = web_document.document[$getElementsByClassName]("loading");
        if (loader[$isNotEmpty]) {
          loader[$first][$remove]();
        }
      }
    }
    onReady() {
      return async.async(dart.void, (function* onReady$() {
        let t0, t0$;
        this[onReady]();
        let pref = (yield this.myPref);
        let token = (t0 = dart.nullCheck(pref).retriveToken(), t0 == null ? "" : t0);
        let phone = (t0$ = pref.retrivePhoneNumber(), t0$ == null ? "" : t0$);
        let response = (yield new home_provider.HomeProvider.new().homePageData(token, phone));
        if (response.statusCode === 200) {
          let data = convert.jsonDecode(response.body);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), true)) {
            let user = null;
            localdata.LocalData.user = user;
            let locationData = dart.dsend(data, '_get', ["location"]);
            let _locationController = extension_instance['Inst|find'](location_controller.LocationController, get_main.Get);
            for (let i = 0; i < core.num.as(dart.dload(locationData, 'length')); i = i + 1) {
              let citiesData = dart.dsend(dart.dsend(locationData, '_get', [i]), '_get', ["cities"]);
              let cities = T.JSArrayOfCity().of([]);
              for (let city of core.Iterable.as(citiesData)) {
                let areas = T.JSArrayOfString().of([]);
                for (let area of core.Iterable.as(dart.dsend(city, '_get', ["city_area"]))) {
                  areas[$add](core.String.as(dart.dsend(area, '_get', ["area"])));
                }
                let cityObj = new city$.City.new(core.String.as(dart.dsend(city, '_get', ["city_name"])), areas);
                cities[$add](cityObj);
              }
              let country = new country$.Country.new(core.String.as(dart.dsend(dart.dsend(locationData, '_get', [i]), '_get', ["name"])), cities);
              _locationController.countries[$add](country);
            }
            _locationController.filterCountries[$addAll](_locationController.countries);
            _locationController.defineLocationType();
            let sliderData = dart.dsend(data, '_get', ["slider"]);
            for (let i = 0; i < core.num.as(dart.dload(sliderData, 'length')); i = i + 1) {
              this.offers[$add](dart.dsend(dart.dsend(sliderData, '_get', [i]), '_get', ["img"]));
            }
            let categoryData = dart.dsend(data, '_get', ["categories"]);
            for (let i = 0; i < core.num.as(dart.dload(categoryData, 'length')); i = i + 1) {
              let subCategories = T.JSArrayOfSubCategory().of([]);
              let subCategoryData = dart.dsend(dart.dsend(categoryData, '_get', [i]), '_get', ["sub_categories"]);
              for (let j = 0; j < core.num.as(dart.dload(subCategoryData, 'length')); j = j + 1) {
                let subCategory = new sub_category.SubCategory.new(core.int.parse(core.String.as(dart.dsend(dart.dsend(subCategoryData, '_get', [j]), '_get', ["id"]))), core.String.as(dart.dsend(dart.dsend(subCategoryData, '_get', [j]), '_get', ["name"])), T.StringN().as(dart.dsend(dart.dsend(subCategoryData, '_get', [j]), '_get', ["attribute"])));
                subCategories[$add](subCategory);
              }
              let category = new category$.Category.new(core.int.parse(core.String.as(dart.dsend(dart.dsend(categoryData, '_get', [i]), '_get', ["id"]))), core.String.as(dart.dsend(dart.dsend(categoryData, '_get', [i]), '_get', ["name"])), core.String.as(dart.dsend(dart.dsend(categoryData, '_get', [i]), '_get', ["icon"])), subCategories);
              this.categories[$add](category);
            }
            let serviceData = dart.dsend(data, '_get', ["services"]);
            core.print(serviceData);
            for (let i = 0; i < core.num.as(dart.dload(serviceData, 'length')); i = i + 1) {
              let service = new service$.Service.new(core.int.parse(core.String.as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["id"]))), core.String.as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["name"])), core.double.parse(core.String.as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["start_price"]))), core.int.parse(core.String.as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["cat_id"]))), core.int.parse(core.String.as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["sub_cat_id"]))), core.String.as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["icon"])), core.String.as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["description"])), T.StringN().as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["attribute"])), T.StringN().as(dart.dsend(dart.dsend(serviceData, '_get', [i]), '_get', ["option"])));
              this.services[$add](service);
            }
          }
        }
        this.update();
      }).bind(this));
    }
    onClose() {
    }
    getServicesByCatId(id) {
      core.print("getServicesByCatId...");
      this.selectedCategoryId = id;
      let servicesInCategory = T.JSArrayOfService().of([]);
      for (let service of this.services) {
        core.print("looping...");
        if (service.catId === id) servicesInCategory[$add](service);
      }
      core.print("return servicesInCategory...");
      return servicesInCategory;
    }
    getSubCategoriesByCatId(id) {
      for (let category of this.categories) {
        if (category.id === id) return category.subCategories;
      }
      return T.JSArrayOfSubCategory().of([]);
    }
    getServicesBySubCatId(id) {
      let servicesInSubCategory = T.JSArrayOfService().of([]);
      if (id === 0) {
        core.print("id = " + dart.str(id));
        core.print("selectedCategoryId " + dart.str(this.selectedCategoryId));
        servicesInSubCategory = this.getServicesByCatId(this.selectedCategoryId);
      } else {
        for (let service of this.services) {
          if (service.subCatId === id) servicesInSubCategory[$add](service);
        }
      }
      return servicesInSubCategory;
    }
    [onReady]() {
      return super.onReady();
    }
  };
  (home_controller.HomeController.new = function() {
    this[myPref] = app_pref.AppPref.instance;
    this[offers] = [];
    this[categories] = T.JSArrayOfCategory().of([]);
    this[services] = T.JSArrayOfService().of([]);
    this[mContext] = null;
    this[selectedCategoryId] = 0;
    this[currentIndex] = rx_types['IntExtension|get#obs'](0);
    home_controller.HomeController.__proto__.new.call(this);
    ;
  }).prototype = home_controller.HomeController.prototype;
  dart.addTypeTests(home_controller.HomeController);
  dart.addTypeCaches(home_controller.HomeController);
  dart.setMethodSignature(home_controller.HomeController, () => ({
    __proto__: dart.getMethods(home_controller.HomeController.__proto__),
    changePage: dart.fnType(dart.dynamic, [core.int]),
    getServicesByCatId: dart.fnType(core.List$(service$.Service), [core.int]),
    getSubCategoriesByCatId: dart.fnType(core.List$(sub_category.SubCategory), [core.int]),
    getServicesBySubCatId: dart.fnType(core.List$(service$.Service), [core.int])
  }));
  dart.setLibraryUri(home_controller.HomeController, I[0]);
  dart.setFieldSignature(home_controller.HomeController, () => ({
    __proto__: dart.getFields(home_controller.HomeController.__proto__),
    myPref: dart.fieldType(async.Future$(dart.nullable(app_pref.AppPref))),
    offers: dart.fieldType(core.List),
    categories: dart.fieldType(core.List$(category$.Category)),
    services: dart.fieldType(core.List$(service$.Service)),
    mContext: dart.fieldType(dart.nullable(framework.BuildContext)),
    selectedCategoryId: dart.fieldType(core.int),
    currentIndex: dart.fieldType(rx_types.RxInt)
  }));
  dart.trackLibraries("packages/amar_karigor/app/modules/home/controllers/home_controller.dart", {
    "package:amar_karigor/app/modules/home/controllers/home_controller.dart": home_controller
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["home_controller.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../packages/amar_karigor/app/modules/home/controllers/home_controller.dart.lib.js"}');
  // Exports:
  return {
    app__modules__home__controllers__home_controller: home_controller
  };
}));

//# sourceMappingURL=home_controller.dart.lib.js.map
